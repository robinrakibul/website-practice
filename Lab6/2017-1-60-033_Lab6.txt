1.Write a MongoDB query to display all the documents in the collection restaurants.
Ans: db.restaurants.find();

2.Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine for all the
documents in the collection restaurant.
Ans: db.restaurants.find({},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1});

3.Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine, but exclude
the field_id for all the documents in the collection restaurant.
Ans: db.restaurants.find({},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1,"_id":0})

4.Write a MongoDB query to display the fields restaurant_id, name, borough and zip code, but
exclude the field _id for all the documents in the collection restaurant.
Ans: db.restaurants.find({}, {"restaurant_id":1,"name":1,"borough":1, "address.zipcode":1,"_id":0})

5.Write a MongoDB query to display all the restaurant which is in the borough Bronx.
Ans: db.restaurants.find({"borough":"Bronx"})

6.Write a MongoDB query to display the first 15 restaurant which is in the borough Bronx.
Ans: db.restaurants.find({"borough":"Bronx"}).limit(15)

7.Write a MongoDB query to display the next 15 restaurants after skipping first 10 which are in the
borough Bronx.
Ans: db.restaurants.find({"borough":"Bronx"}).limit(15).skip(10)

8.Write a MongoDB query to find the restaurants who achieved a score more than 100.
Ans: db.restaurants.find({"grades.score":{$gt:100}})

9.Write a MongoDB query to find the restaurants that achieved a score, more than 60 but less than
95.
Ans: db.restaurants.find({"grades.score":{$gt:60,$lt:95}})

10.Write a MongoDB query to find the restaurants which locate in latitude value less than -95.754168.
Ans: db.restaurants.find({"address.coord":{$lt:-95.754168}})

11.Write a MongoDB query to find the restaurants that do not prepare any cuisine of 'American' and
their grade score more than 70 and latitude less than -65.754168.
Ans: db.restaurants.find(
               {$and:
               [{"cuisine":{$ne:"American"}},
               	{"grades.score":{$gt:70}},
                {"address.coord":{$lt:-65.754168}}
               ]});

12.Write a MongoDB query to find the restaurants which do not prepare any cuisine of 'American' and
achieved a grade point 'A' not belongs to the borough Brooklyn. The document must be displayed
according to the cuisine in descending order.
Ans: db.restaurants.find({
                          "cuisine":{$ne:"American "},
                          "grades.grade":"A",
                          "borough":{$ne:"Brooklyn"}
                       	  }).sort({"cuisine":-1});

13.Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants
which contain 'Wil' as first three letters for its name.
Ans: db.restaurants.find({name: /^Wil/},
			{
			"restaurant_id" : 1,
			"name":1,"borough":1,
			"cuisine" :1
			});

14.Write a MongoDB query to find the restaurants which belong to the borough Bronx and prepared
either American or Chinese dish.
Ans: db.restaurants.find({ "borough": "Bronx" , $or : 
			[
			 { "cuisine" : "American " },
			 { "cuisine" : "Chinese" }
			]});
15.to find the restaurant Id, name, borough and cuisine for those restaurants which belong to the
borough Staten Island or Queens or Bronxor Brooklyn.
Ans: db.restaurants.find(
		{"borough":{$in:["Staten Island","Queens","Bronx","Brooklyn"]}},
		{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}
			);

16.Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants
which are not belonging to the borough Staten Island or Queens or Bronxor Brooklyn
Ans: db.restaurants.find(
		{"borough":{$nin:["Staten Island","Queens","Bronx","Brooklyn"]}},
		{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}
			);

17.Write a MongoDB query which will select the restaurant Id, name and grades for those restaurants
which returns 0 as a remainder after dividing the score by 7.
Ans: db.restaurants.find({"grades.score":{$mod:[7,0]}},{"restaurant_id":1,"name":1,"grades":1});

18.Write a MongoDB query to find the restaurant name, borough, longitude and attitude and cuisine for
those restaurants which contains 'mon' as three letters somewhere in its name.
Ans: db.restaurants.find({name: 
                {$regex:"mon.*",$options:"i"}},
		{"name":1,"borough":1,"address.coord":1,"cuisine":1}
                );

19.Write a MongoDB query to find the restaurant name, borough, longitude and latitude and cuisine for
those restaurants which contain 'Mad' as first three letters of its name.
Ans: db.restaurants.find(
                   {name:{$regex: /^Mad/i}},
                       {"name":1,"borough":1,"address.coord":1,"cuisine" :1
                       });